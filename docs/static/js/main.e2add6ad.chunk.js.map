{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GitGridItem.js","components/GitGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GitGridItem","console","log","className","src","alt","GitGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,sDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAKpC,OAHAc,QAAQC,IAAIN,EAAIC,EAAOV,GAInB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCNHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAU,CAChCqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAY,WAEV1B,EAASC,GACR0B,MAAM,SAAAC,GAEGH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAKrB,CAACtB,IAIGuB,EDnBoBK,CAAa5B,GAAhCa,EAF2B,EAEhCN,KAAae,EAFmB,EAEnBA,QAEhB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEV,qBAAKA,UAAU,YAAf,SAIKL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAE,EAAF,eAEIA,GADCA,EAAIC,aEhBnBkB,EAAe,WAAO,IAAD,EAEM3C,mBAAU,CAAC,cAFjB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAM9B,OACI,qCACI,+CACF,cAAC,EAAD,CAAaA,cAAeA,IAC1B,uBAEF,6BAGQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MChB1B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e2add6ad.chunk.js","sourcesContent":["//rafc\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange = (e) => {\r\n\r\n    setInputValue(e.target.value);\r\n}\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          \r\n            <input    \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n         </form>\r\n          \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) =>{\r\n     \r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&api_key=3VTgBnQmycDpaLk3orhRMmXdLhAqxQT5`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n  \r\n}","import React from 'react'\r\n\r\n\r\nexport const GitGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GitGridItem } from './GitGridItem';\r\n\r\n\r\nexport const GitGrid = ({category}) => {\r\n\r\nconst {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            { <div className=\"card-grid\">\r\n\r\n           \r\n               {\r\n                   images.map( img  => (\r\n                       < GitGridItem\r\n                       key={img.id}\r\n                       {...img}\r\n                        />\r\n                   ))\r\n               }\r\n           \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n \r\n    const [state, setState] = useState ({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () =>{\r\n\r\n      getGifs( category )   \r\n      .then( imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });       \r\n\r\n      })\r\n\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n\r\n}\r\n","//rafc\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GitGrid } from './components/GitGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['One Punch']);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Libreria Gifs</h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n       \r\n          <ol>\r\n              {\r\n                  //llamar los arreglos de categories\r\n                  categories.map( category => (\r\n                    <GitGrid \r\n                    key= {category}\r\n                    category = {category } \r\n                    />\r\n                  ))\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}